; Linear Discriminant Analysis
(ns clj-mlab.example.DBNFullMnistExample
  (:import [org.deeplearning4j.datasets.iterator DataSetIterator])
  (:import [org.deeplearning4j.datasets.iterator.impl MnistDataSetIterator])
  (:import [org.deeplearning4j.eval Evaluation])
  (:import [org.deeplearning4j.nn.api OptimizationAlgorithm])
  (:import [org.deeplearning4j.nn.conf MultiLayerConfiguration NeuralNetConfiguration])
  (:import [org.deeplearning4j.nn.conf.distribution NormalDistribution])
  (:import [org.deeplearning4j.nn.conf.layers RBM])
  (:import [org.deeplearning4j.nn.conf.override ClassifierOverride])
  (:import [org.deeplearning4j.nn.multilayer MultiLayerNetwork])
  (:import [org.deeplearning4j.nn.weights WeightInit])
  (:import [org.deeplearning4j.optimize.api IterationListener])
  (:import [org.deeplearning4j.optimize.listeners ScoreIterationListener])
  (:import [org.nd4j.linalg.api.buffer DataBuffer])
  (:import [org.nd4j.linalg.api.ndarray INDArray])
  (:import [org.nd4j.linalg.dataset DataSet])
  (:import [org.nd4j.linalg.factory Nd4j])
  (:import [org.nd4j.linalg.lossfunctions LossFunctions])
  (:import [org.slf4j Logger])
  (:import [org.slf4j LoggerFactory])
  (:import [org.slf4j LoggerFactory])
  (:import [java.util Arrays Collections]))


(def conf
  (doto (NeuralNetConfiguration.)
    (.Builder)
    (.layer (RBM.))
    (.nIn (* numRows numColumns))
    (.nOut outputNum)
    (.weightInit (.DISTRIBUTION WeightInit))
    (.seed seed)
    (.dist (NormalDistribution. 0 1))
    (.constrainGradientToUnitNorm true)
    (.iterations iterations)
    (.lossFunction (.RMSE_XENT (.LossFunction LossFunctions)))
    (.learningRate 1e-1)
    (.momentum 0.5)
    (.momentumAfter (.singletonMap Collections 3 0.9))
    (.optimizationAlgo (.CONJUGATE_GRADIENT OptimizationAlgorithm))
    (.list 4)
    (.hiddenLayerSizes (int-array 3 500 250 200))
    (.override 3 (.build (ClassifierOverride.)))))

(def model
  (MultiLayerNetwork. conf))

(defn start
  [])
